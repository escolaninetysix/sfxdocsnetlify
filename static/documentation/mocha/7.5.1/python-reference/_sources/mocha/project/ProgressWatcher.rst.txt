.. module:: mocha.project
.. _ProgressWatcher:

ProgressWatcher
***************

.. inheritance-diagram:: mocha.project.ProgressWatcher
    :parts: 2


Detailed Description
--------------------

.. _More:

    Progress indication class for different complex operations which might take a long time
    (e.g. rendering, exporting, etc.).
    
    There are 4 main Qt signals:
    
    * `started()`: The signal being emitted when operation starts.
    * `progress_status(int)`: The signal being emitted during operation.
    * `progress_message(unicode)`: Verbose signal being emitted during operation.
    * `finished()`: The signal being emitted when operation ends.


.. class:: ProgressWatcher([parent=None])


    :type parent: :class:`PySide2.QtCore.QObject`


    Create a global progress watcher instance which reflects the mocha progress bar behaviour.





.. method:: ProgressWatcher.finished()







.. method:: ProgressWatcher.progress_message(message)


    :type message: unicode





.. method:: ProgressWatcher.progress_status(progress)


    :type progress: uint





.. method:: ProgressWatcher.started()








