.. module:: mocha.project
.. _BezierContour:

BezierContour
*************

.. inheritance-diagram:: BezierContour
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`__eq__<BezierContour.__eq__>` (rhs)
*    def :meth:`control_point<BezierContour.control_point>` (index)
*    def :meth:`get_bounding_rect<BezierContour.get_bounding_rect>` ([time=0.f[, view=View( 0 )]])
*    def :meth:`insert_point<BezierContour.insert_point>` (time, bcpd[, index=UINT_MAX[, view=View()]])
*    def :meth:`parameter<BezierContour.parameter>` (name_components)
*    def :meth:`parameter_set<BezierContour.parameter_set>` ([name_components=list()])
*    def :meth:`remove<BezierContour.remove>` ()


Properties
^^^^^^^^^^
.. container:: property_list

*    property :attr:`control_points<BezierContour.control_points>` [read-only] of list of :class:`BezierControlPoint` instances


Detailed Description
--------------------


    
    Bezier contour class. Provides access to Bezier contours and their control points.
    


.. class:: BezierContour(BezierContour)


    :type BezierContour: :class:`mocha.project.BezierContour`







    :type BezierContour: :class:`mocha.project.BezierContour`



.. method:: BezierContour.control_point(index)


    :type index: :class:`PySide.QtCore.uint`
    :rtype: :class:`mocha.project.BezierControlPoint`



    
    :param index: Control point index.
    :rtype: :class:`BezierControlPoint` or ``None`` if index is invalid.
    
    Returns bezier control point by index.
    



.. method:: BezierContour.get_bounding_rect([time=0.f[, view=View( 0 )]])


    :type time: :class:`PySide.QtCore.float`
    :type view: :class:`mocha.project.View`
    :rtype: list of float






.. method:: BezierContour.insert_point(time, bcpd[, index=UINT_MAX[, view=View()]])


    :type time: :class:`PySide.QtCore.float`
    :type bcpd: :class:`mocha.project.BezierControlPointData`
    :type index: :class:`PySide.QtCore.uint`
    :type view: :class:`mocha.project.View`
    :rtype: :class:`mocha.project.BezierControlPoint`



    
    :param time: Keyframe time.
    :param xcpd: Keyframe data.
    :param index: Inserting index.
    :param view: View.
    
    :rtype: :class:`BezierControlPoint`
    
    Inserts new control point into index position.
    



.. method:: BezierContour.__eq__(rhs)


    :type rhs: :class:`mocha.project.BezierContour`
    :rtype: :class:`PySide.QtCore.bool`






.. method:: BezierContour.parameter(name_components)


    :type name_components: list of strings
    :rtype: :class:`mocha.project.Parameter`



    
    :param name_components: Relative name for a requested parameter.
    
    :rtype: :class:`Parameter`
    
    Returns :class:`Parameter` instance bound with given name path.
    



.. method:: BezierContour.parameter_set([name_components=list()])


    :type name_components: list of strings
    :rtype: :class:`mocha.project.ParameterSet`



    
    :param name_components: Relative name for a requested parameter set.
    
    :rtype: :class:`ParameterSet`
    
    Returns :class:`ParameterSet` instance bound with given name path.
    Pass an empty list ``[]`` to get access to the Bezier contour parameters set.
    



.. method:: BezierContour.remove()





    
    Removes this contour.
    



.. attribute:: BezierContour.control_points


    :type: list of :class:`BezierControlPoint` instances
    :access: read-only    
    Provides access to list of :class:`BezierControlPoint` instances.
    




